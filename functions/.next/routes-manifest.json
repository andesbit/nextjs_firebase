{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "dynamicRoutes": [
    {
      "page": "/admin-dashboard/edit/[propertyId]",
      "regex": "^/admin\\-dashboard/edit/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPpropertyId": "nxtPpropertyId"
      },
      "namedRegex": "^/admin\\-dashboard/edit/(?<nxtPpropertyId>[^/]+?)(?:/)?$"
    },
    {
      "page": "/property/[propertyId]",
      "regex": "^/property/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPpropertyId": "nxtPpropertyId"
      },
      "namedRegex": "^/property/(?<nxtPpropertyId>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/account",
      "regex": "^/account(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/account(?:/)?$"
    },
    {
      "page": "/account/my-favourites",
      "regex": "^/account/my\\-favourites(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/account/my\\-favourites(?:/)?$"
    },
    {
      "page": "/admin-dashboard",
      "regex": "^/admin\\-dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin\\-dashboard(?:/)?$"
    },
    {
      "page": "/admin-dashboard/new",
      "regex": "^/admin\\-dashboard/new(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin\\-dashboard/new(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/forgot-password",
      "regex": "^/forgot\\-password(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/forgot\\-password(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    },
    {
      "page": "/property-search",
      "regex": "^/property\\-search(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/property\\-search(?:/)?$"
    },
    {
      "page": "/property-search/(..)login",
      "regex": "^/property\\-search/\\(\\.\\.\\)login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/property\\-search/\\(\\.\\.\\)login(?:/)?$"
    },
    {
      "page": "/register",
      "regex": "^/register(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/register(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": {
    "beforeFiles": [
      {
        "source": "/login",
        "destination": "/property-search/(..)login",
        "has": [
          {
            "type": "header",
            "key": "Next-Url",
            "value": "\\/property-search(?:\\/(.*))?[\\/#\\?]?"
          }
        ],
        "regex": "^/login(?:/)?$"
      }
    ],
    "afterFiles": [],
    "fallback": []
  }
}